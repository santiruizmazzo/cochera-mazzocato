name: CI/CD Pipeline

# Trigger del workflow
on:
  push:
    branches: [ main, test, dev ]
  pull_request:
    branches: [ main, test ]

# Variables de entorno globales
env:
  GO_VERSION: '1.24'

jobs:
  build:
    name: Build, Lint & Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify

    - name: Build API
      run: |
        echo "Building Go API..."
        go build -v -o api ./cmd/server
        echo "Build successful!"
    
    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m
    
    - name: Run unit tests
      run: |
        echo "Running unit tests..."
        go test -v -short -race -cover ./...
    
    - name: Run integration tests
      run: |
        echo "Running integration tests..."
        go test -v -run Integration -cover ./...
    
    - name: Upload API binary
      uses: actions/upload-artifact@v3
      with:
        name: api-binary
        path: api
        retention-days: 7
  
  test-deploy:
    name: Deploy to Test Environment
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/test'
    
    # Variables específicas del ambiente de test
    env:
      DEPLOY_ENV: test
      DEPLOY_URL: ${{ secrets.TEST_API_DEPLOY_HOOK }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download API binary
      uses: actions/download-artifact@v3
      with:
        name: api-binary
        path: ./
    
    - name: Make binary executable
      run: chmod +x ./api
    
    - name: Deploy to test server
      run: |
        echo "Deploying to test environment..."
        echo "Binary size: $(ls -lh api)"
        curl "$DEPLOY_URL"
        echo "✅ Deployment to test environment completed!"